<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.example.finalEclips.eclips.notice.repository.NoticeMapper">

	<resultMap id="noticeResultMap"
		type="com.example.finalEclips.eclips.notice.dto.NoticeDto">
		<id property="noticeId" column="notice_id" />
		<result property="title" column="title" />
		<result property="content" column="content"/>
		<result property="isMainNotice" column="is_main_notice" />
		<result property="createdAt" column="notice_create" />
		<result property="updatedAt" column="notice_update" />
		<result property="views" column="views" />
		<collection property="attachments"
			ofType="com.example.finalEclips.eclips.notice.dto.NoticeAttachmentDto">
			<result property="attachmentId" column="attachment_id" />
			<result property="noticeId" column="notice_id" />
			<result property="originFilename" column="origin_filename" />
			<result property="storedFilename" column="stored_filename" />
			<result property="contentType" column="content_type" />
			<result property="fileSize" column="file_size" />
			<result property="createdAt" column="created_at" />
		</collection>
	</resultMap>

	<select id="findAllNotices" resultMap="noticeResultMap">
		SELECT
		      n.NOTICE_ID,
		      n.TITLE,
		      n.CONTENT,
		      n.IS_MAIN_NOTICE,
		      n.CREATED_AT AS notice_create,
		      n.UPDATED_AT AS notice_update,
		      n.VIEWS AS views,
		      na.ATTACHMENT_ID,
		      na.NOTICE_ID AS attachment_notice_id,
		      na.ORIGIN_FILENAME,
		      na.STORED_FILENAME,
		      na.CONTENT_TYPE,
		      na.FILE_SIZE,
		      na.CREATED_AT AS attachment_create
		FROM NOTICE n 
		LEFT OUTER JOIN NOTICE_ATTACHMENTS na ON n.notice_id = na.notice_id
		ORDER BY n.IS_MAIN_NOTICE DESC, n.CREATED_AT DESC
	</select>
	
	<select id="findNoticeAttachmentById" resultType="com.example.finalEclips.eclips.notice.dto.NoticeAttachmentDto">
		SELECT
		      ATTACHMENT_ID, 
		      NOTICE_ID,
		      ORIGIN_FILENAME, 
		      STORED_FILENAME, 
		      CONTENT_TYPE, 
		      FILE_SIZE, 
		      CREATED_AT
		FROM NOTICE_ATTACHMENTS
		WHERE ATTACHMENT_ID = #{attachmentId}
	</select>
	
	<delete id="deleteNoticeAttachmentsByPostId">
		DELETE FROM NOTICE_ATTACHMENTS WHERE NOTICE_ID = #{noticeId}
	</delete>
	
	<insert id="saveNoticeAttachments">
		INSERT INTO NOTICE_ATTACHMENTS
		(NOTICE_ID, ORIGIN_FILENAME, STORED_FILENAME, CONTENT_TYPE, FILE_SIZE)
        <foreach collection="fileDtos" item="item" separator="UNION ALL">
            SELECT #{noticeId}, #{item.originFilename}, #{item.storedFilename}, #{item.contentType}, #{item.size} FROM DUAL
        </foreach>
	</insert>
	
	
	<select id="findSearchNotice" resultType="com.example.finalEclips.eclips.notice.dto.NoticeDto" resultMap="noticeResultMap">
	SELECT
	      NOTICE_ID, 
	      TITLE, 
	      TO_CHAR(DBMS_LOB.SUBSTR(CONTENT, LENGTH(CONTENT), 1)) AS CONTENT,
	      IS_MAIN_NOTICE, 
	      CREATED_AT AS notice_create,
	      UPDATED_AT AS notice_update,
	      VIEWS AS views
	FROM notice
	WHERE TITLE LIKE '%' ||  #{search} || '%'
	OR TO_CHAR(DBMS_LOB.SUBSTR(CONTENT, LENGTH(CONTENT), 1)) LIKE '%' ||  #{search} || '%'
	ORDER BY IS_MAIN_NOTICE DESC, CREATED_AT DESC
	</select>
	
	<select id="findNoticeById" resultType="com.example.finalEclips.eclips.notice.dto.NoticeUpdateDto" resultMap="noticeResultMap">
	SELECT
	      NOTICE_ID, 
	      TITLE, 
	      TO_CHAR(DBMS_LOB.SUBSTR(CONTENT, LENGTH(CONTENT), 1)) AS CONTENT,
	      IS_MAIN_NOTICE, 
	      CREATED_AT AS notice_create,
	      UPDATED_AT AS notice_update,
	      VIEWS AS views
	FROM notice
	WHERE NOTICE_ID = #{id}
	</select>
	
	<update id="updateNoticeById">
	UPDATE NOTICE SET 
				 TITLE = #{title}, 
			     CONTENT = #{content, jdbcType=CLOB}, 
			     UPDATED_AT = CURRENT_TIMESTAMP 
    WHERE NOTICE_ID = #{id}
	</update>
	
	<delete id="deleteNoticeById">
	DELETE NOTICE WHERE notice_id = #{id}
	</delete>
	
	<insert id="saveNotice">
	INSERT INTO NOTICE (TITLE, CONTENT, IS_MAIN_NOTICE)
	VALUES( #{title}, #{content}, #{isMainNotice})
	</insert>
	
	
	<update id="incrementViewCount">
        UPDATE NOTICE
        SET VIEWS = VIEWS + 1
        WHERE NOTICE_ID = #{id}
    </update>
</mapper>