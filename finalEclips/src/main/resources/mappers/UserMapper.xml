<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.finalEclips.eclips.user.repository.UserMapper">

    <!-- 아이디 중복확인 -->
    <select id="findUserById" resultType="com.example.finalEclips.eclips.user.dto.UserDto">
        SELECT USER_ID, PASSWORD, NAME, BIRTH_DATE, PHONE_NUMBER, EMAIL, "ROLE", LOGIN_TYPE, CREATED_AT, UPDATED_AT 
		FROM USER_TABLE
		WHERE USER_ID = #{userId}
    </select>

    <!-- 회원가입 - 구글 -->
	<insert id="saveOAuthUser">
	    INSERT INTO USER_TABLE
	    (USER_ID, NAME, EMAIL, "ROLE", LOGIN_TYPE, CREATED_AT, UPDATED_AT)
	    VALUES(#{email}, #{name}, #{email}, #{role}, #{loginType}, CURRENT_TIMESTAMP , CURRENT_TIMESTAMP)
	</insert>

    <!-- 회원가입 - 공통 -->
    <insert id="saveUser">
	    INSERT INTO USER_TABLE
		    (USER_ID, PASSWORD, NAME, EMAIL, "ROLE", LOGIN_TYPE, CREATED_AT, UPDATED_AT
		    <if test="birthDate != null">, BIRTH_DATE</if>
		    <if test="phoneNumber != null">, PHONE_NUMBER</if>
	    )
	    VALUES (#{userId}, #{password}, #{name}, #{email}, #{role}, #{loginType}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
		    <if test="birthDate != null">, #{birthDate}</if>
		    <if test="phoneNumber != null">, #{phoneNumber}</if>
        )
    </insert>

    <!-- 시군구 찾기 -->
    <select id="findSigunguId" resultType="int">
	    SELECT s.SIGUNGU_ID 
	    FROM SIGUNGU s
	    JOIN SIDO si ON s.SIDO_ID = si.SIDO_ID
	    WHERE si.SIDO_NAME LIKE CONCAT(#{sidoName}, '%')
	    AND s.SIGUNGU_NAME = #{sigunguName}
    </select>
    
    <!-- 회원가입 - 사업자 -->
    <insert id="saveBizUser">
        INSERT INTO BUSINESS_USER (USER_ID, BUSINESS_REG_NO, STORE_NAME, ADDRESS, SIGUNGU_ID, LAT, LNG)
        VALUES (#{userId}, #{businessRegNo}, #{storeName}, #{address}, #{sigunguId}, #{lat}, #{lng})
    </insert>
    
    <!-- 약관 불러오기 -->
    <select id="findAllTerms" resultType="com.example.finalEclips.eclips.user.dto.TermsDto">
        SELECT TERMS_ID, TITLE, CONTENT, IS_REQUIRED, CREATED_AT, UPDATED_AT
        FROM TERMS
    </select>
    
    <!-- 약관 동의여부 저장 -->
    <insert id="saveTermsAgreement">
	    INSERT INTO TERMS_AGREEMENT (USER_ID, TERMS_ID, IS_AGREE, CREATED_AT)
	    VALUES (#{userId}, 4, #{isAgree}, CURRENT_TIMESTAMP)
    </insert>
    
    <!-- 약관 동의여부 불러오기 -->
    <select id="findUserIdTermsAgreement" resultType="com.example.finalEclips.eclips.user.dto.TermsAagreementDto">
	    SELECT USER_ID, TERMS_ID, IS_AGREE
		FROM TERMS_AGREEMENT
		WHERE USER_ID = #{userId}
    </select>
    
    <!-- 사용자 정보 업데이트 -->
	<update id="updateUserInfo" parameterType="com.example.finalEclips.eclips.user.dto.UserDto">
	    UPDATE USER_TABLE
	    SET
	        PHONE_NUMBER = NULLIF(#{phoneNumber, jdbcType=VARCHAR}, ''),
	        EMAIL = COALESCE(NULLIF(#{email, jdbcType=VARCHAR}, ''), EMAIL),
	        UPDATED_AT = CURRENT_TIMESTAMP
	    WHERE USER_ID = #{userId}
	</update>

	<!-- 약관 동의 정보 업데이트 -->
	<update id="updateTermsAgreement" parameterType="com.example.finalEclips.eclips.user.dto.TermsAagreementDto">
	    UPDATE TERMS_AGREEMENT
	    SET IS_AGREE = COALESCE(NULLIF(#{isAgree, jdbcType=VARCHAR}, ''), IS_AGREE)
	    WHERE USER_ID = #{userId}
	</update>
	
	<!-- 비밀번호 변경 -->
	<update id="updatePassword" parameterType="com.example.finalEclips.eclips.user.dto.PasswordChangeDto">
		UPDATE USER_TABLE
		SET PASSWORD = #{newPassword}
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 사용자 삭제 -->
    <delete id="deleteUserById">
        DELETE FROM USER_TABLE
        WHERE USER_ID = #{userId}
    </delete>
    
    <!-- 아이디찾기 -->
    <select id="findUserByName" resultType="com.example.finalEclips.eclips.user.dto.UserDto">
	    SELECT USER_ID
		FROM USER_TABLE
		WHERE NAME = #{name} AND EMAIL = #{email}
    </select>

    <!-- 비밀번호 찾기 : 사용자 조회 -->
    <select id="findUserPw" resultType="com.example.finalEclips.eclips.user.dto.UserDto">
        SELECT USER_ID, EMAIL, NAME
		FROM USER_TABLE
		WHERE USER_ID = #{userId} AND NAME = #{name} AND EMAIL = #{email}
    </select>

</mapper>